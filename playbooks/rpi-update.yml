
# Maintainer:   jeffskinnerbox@yahoo.com / www.jeffskinnerbox.me
# Version:      2.0.0
#
# DESCRIPTION
#
# TESTING
#    YAML linter to spot Ansible YAML syntax errors
#        yamllint rpi-update.yml
#        ansible-lint rpi-update.yml
#
#    Ansible linter to spot Ansible playbook syntax errors
#        ansible-playbook rpi-update.yml -i 192.168.1.207, --user ansible --syntax-check
#
#    Generate a list of tasks that will be executed for the tags
#        ansible-playbook rpi-update.yml -i 192.168.1.207, --user ansible --list-tasks
#
#    Ansible dry-run checking for errors and showing results of a run
#        ansible-playbook rpi-update.yml -i 192.168.1.207, --user ansible --check
#
# EXECUTION
#    Run the playbook for real (assuming 'inventory' is up to date)
#        ansible-playbook rpi-update.yml -i 192.168.1.207, --user ansible
#
# VALIDATION
#
# SOURCES
#
# ANSIBLE VERSION
#    ansible [core 2.16.4]
#


---


- name: Install Full-upgrade, Add Required Packages, and Reboot as Needed
  hosts: all
  become: true           # set to 'true' to activate privilege escalation => use sudo and be root by default
  become_method: ansible.builtin.sudo
  gather_facts: true

  tasks:
    - name: Update the apt repository cache if older than 1 day (as root)
      ansible.builtin.apt:
        state: present                   # must be one of: absent, build-dep, fixed, latest, present
        update_cache: true               # update the apt repository list cache
        cache_valid_time: 86400          # update the apt cache if it is older than this seconds

    - name: Update and upgrade all apt repository packages to the latest version (as root)
      ansible.builtin.apt:
        state: present
        upgrade: dist
        cache_valid_time: 86400          # update the apt cache if it is older than this seconds

    - name: Remove apt repositories not needed anymore (as root)
      ansible.builtin.apt:
        autoremove: true

    - name: Check if a reboot is needed because of kernel changes, etc. (as root)
      ansible.builtin.stat:
        path: /var/run/reboot-required
      register: reboot_required_file

    - name: Reboot the box if needed (as root)
      ansible.builtin.reboot:
        msg: "Reboot Initiated By Ansible"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: uptime
      when: reboot_required_file.stat.exists

